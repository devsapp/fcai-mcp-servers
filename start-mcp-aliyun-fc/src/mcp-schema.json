{
    "tools": [
      {
        "name": "put-custom-runtime-function",
        "description": "提供构建完成的匹配阿里云自定义运行时的zip格式的代码包的可下载链接以及其他函数部署配置，创建函数并部署代码到该函数。如果函数已存在，则尝试覆盖并更新目标函数。建议使用该方法前先确认函数是否存在，如果存在需要确认更新目标函数",
        "inputSchema": {
          "type": "object",
          "properties": {
            "codeUri": {
              "type": "string",
              "description": "zip格式代码包下载链接，代码工程必须是已经完成构建后打包的代码工程，且地址必须是免鉴权的地址，例如: https://mybucket.oss-cn-hangzhou.aliyuncs.com/objectName?Expires=1749109495&OSSAccessKeyId=osstmpak&Signature=osstmpsign%3D"
            },
            "functionName": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_][a-zA-Z0-9_-]{0,63}$",
              "description": "函数名称，函数名称在每个region必须是唯一的。"
            },
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "cpu": {
              "type": "number",
              "description": "函数的 CPU 规格，单位为 vCPU，为 0.05 vCPU 的倍数。 和 diskSize 必须同时存在， 如果仅仅填写 memorySize, cpu 和 diskSize 可以不填。内存规格（以GB计算）与CPU规格的比例必须在1到4之间，例如内存为1024MB，则CPU必须为0.25到1之间，默认为1",
              "default": 1
            },
            "memorySize": {
              "type": "number",
              "description": "函数的内存规格，单位为 MB，最小值为128，最大值为 30720。可以选择的内存规格为：128，256，512，1024，2048，4096，8192，16384，32768。默认为2048。内存规格（以GB计算）与CPU规格的比例必须在1到4之间，例如内存为1024MB，则CPU必须为0.25到1之间",
              "default": 2048
            },
            "customRuntimeConfig": {
              "type": "object",
              "properties": {
                "command": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "description": "自定义运行时启动命令，命令执行的用户是root，执行的目录是/code,例如python3"
                },
                "args": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "description": "自定义运行时启动命令参数，例如app.py"
                },
                "port": {
                  "type": "number",
                  "description": "自定义运行时中启动的HTTP Server的监听端口，默认为9000",
                  "default": 9000
                }
              },
              "required": [
                "command"
              ],
              "additionalProperties": false,
              "description": "自定义运行时配置，定义启动命令、参数以及启动的HTTP Server的监听端口"
            },
            "description": {
              "type": "string",
              "description": "函数的描述，可以描述一下函数的功能。"
            },
            "diskSize": {
              "type": "number",
              "description": "磁盘大小，单位是MB，可选值: 512 | 10240"
            },
            "instanceConcurrency": {
              "type": "number",
              "description": "单实例多并发数。规定了单个实例可以同时同时被多个请求命中的上限，只对自定义运行时与自定义容器镜像运行时生效。范围为[1, 200]"
            },
            "environmentVariables": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "description": "环境变量值"
              },
              "description": "运行时的环境变量配置",
              "default": {}
            },
            "internetAccess": {
              "type": "boolean",
              "description": "是否支持从函数实例内访问互联网",
              "default": true
            },
            "logConfig": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "project": {
                      "type": "string",
                      "description": "日志投递的SLS日志项目名称"
                    },
                    "logstore": {
                      "type": "string",
                      "description": "日志投递的SLS日志库名称"
                    },
                    "logBeginRule": {
                      "type": "string",
                      "enum": [
                        "DefaultRegex",
                        "None"
                      ],
                      "default": "DefaultRegex",
                      "description": "日志投递到SLS日志库时的切分规则，可选值为DefaultRegex，表示使用默认的切分规则。启用后，函数计算将按日志分割规则进行切分，切分成多个日志段，并逐条写入日志服务。默认的日志分割规则为 ^.{0,2}d{4}-d{2}-d{2}，即匹配符合xxxx-xx-xx格式的日期，其中x代表数字。该规则将按照行首是否带有日期进行切分，例如您的日志行首是2023-10-10，则该日志将被认为是一块日志的首行，首行和接下来连续不带日期的日志将被作为一条日志写入到日志服务。不启用日志分割规则是，默认使用换行符\\n进行切分。"
                    },
                    "enableInstanceMetrics": {
                      "type": "boolean",
                      "default": true,
                      "description": "是否开启实例级指标投递，开启后，函数计算会自动将实例级指标投递到SLS日志库。"
                    },
                    "enableRequestMetrics": {
                      "type": "boolean",
                      "default": true,
                      "description": "是否开启请求级指标投递，开启后，函数计算会自动将请求级指标投递到SLS日志库。"
                    }
                  },
                  "required": [
                    "project",
                    "logstore"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "enum": [
                    "auto"
                  ]
                }
              ],
              "description": "日志投递配置。如果配置为auto，则会自动创建SLS日志库并投递日志。如果配置为其他值，则需要配置project和logstore。"
            },
            "vpcConfig": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "vpcId": {
                      "type": "string",
                      "description": "VPC的ID"
                    },
                    "vSwitchIds": {
                      "type": "string",
                      "description": "VSwitch的ID"
                    },
                    "securityGroupId": {
                      "type": "string",
                      "description": "安全组ID"
                    }
                  },
                  "required": [
                    "vpcId",
                    "vSwitchIds",
                    "securityGroupId"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "enum": [
                    "auto"
                  ]
                }
              ],
              "description": "函数的VPC网络配置。如果配置为auto，则会自动创建VPC、VSwitch与安全组配置。如果配置为其他值，则需要配置vpcId、vSwitchIds与securityGroupId。函数实例会运行在配置的VPC网络中。"
            },
            "role": {
              "type": "string",
              "description": "函数运行时的角色配置。授予函数计算所需权限的 RAM 角色，使用场景包含：1. 把函数产生的日志发送到您的日志库中。2. 为函数在执行过程中访问其他云资源生成的临时访问令牌。一般可以设置为aliyunfcdefaultrole。角色ARN为acs:ram::****:role/aliyunfcdefaultrole,只需要输入aliyunfcdefaultrole即可"
            },
            "runtime": {
              "type": "string",
              "enum": [
                "custom.debian10",
                "custom.debian11",
                "custom.debian12"
              ],
              "description": "函数的运行时环境，对于自定义运行时，当前支持debian10，debian11，debian12",
              "default": "custom.debian10"
            },
            "timeout": {
              "type": "number",
              "description": "函数执行的超时时间，单位为秒，最小 1 秒，默认 3 秒。函数执行超过这个时间后会被终止执行。",
              "default": 3
            },
            "layers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "函数计算的层配置，当前会自动为custom.debian10，custom.debian11，custom.debian12添加默认的公共层",
              "default": []
            },
            "tag": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "标签名称"
                  },
                  "value": {
                    "type": "string",
                    "description": "标签值"
                  }
                },
                "required": [
                  "key",
                  "value"
                ],
                "additionalProperties": false
              },
              "description": "函数标签的key与value配置",
              "default": []
            }
          },
          "required": [
            "codeUri",
            "functionName",
            "customRuntimeConfig",
            "diskSize",
            "instanceConcurrency"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "update-custom-runtime-function",
        "description": "更新custom runtime函数。只需要提供需要更新的参数，未提供的参数将保持不变",
        "inputSchema": {
          "type": "object",
          "properties": {
            "codeUri": {
              "type": "string",
              "description": "zip格式代码包下载链接，代码工程必须是已经完成构建后打包的代码工程，且地址必须是免鉴权的地址，例如: https://mybucket.oss-cn-hangzhou.aliyuncs.com/objectName?Expires=1749109495&OSSAccessKeyId=osstmpak&Signature=osstmpsign%3D"
            },
            "functionName": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_][a-zA-Z0-9_-]{0,63}$",
              "description": "要更新的目标函数名称"
            },
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "cpu": {
              "type": "number",
              "description": "函数的 CPU 规格，单位为 vCPU，为 0.05 vCPU 的倍数。 和 diskSize 必须同时存在， 如果仅仅填写 memorySize, cpu 和 diskSize 可以不填。内存规格（以GB计算）与CPU规格的比例必须在1到4之间，例如内存为1024MB，则CPU必须为0.25到1之间，默认为1"
            },
            "memorySize": {
              "type": "number",
              "description": "函数的内存规格，单位为 MB，最小值为128，最大值为 30720。可以选择的内存规格为：128，256，512，1024，2048，4096，8192，16384，32768。默认为2048。内存规格（以GB计算）与CPU规格的比例必须在1到4之间，例如内存为1024MB，则CPU必须为0.25到1之间"
            },
            "customRuntimeConfig": {
              "type": "object",
              "properties": {
                "command": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "description": "自定义运行时启动命令，命令执行的用户是root，执行的目录是/code,例如python3"
                },
                "args": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "description": "自定义运行时启动命令参数，例如app.py"
                },
                "port": {
                  "type": "number",
                  "description": "自定义运行时中启动的HTTP Server的监听端口，默认为9000",
                  "default": 9000
                }
              },
              "required": [
                "command"
              ],
              "additionalProperties": false,
              "description": "自定义运行时配置，定义启动命令、参数以及启动的HTTP Server的监听端口"
            },
            "description": {
              "type": "string",
              "description": "函数的描述，可以描述一下函数的功能。"
            },
            "diskSize": {
              "type": "number",
              "description": "磁盘大小，单位是MB，可选值: 512 | 10240"
            },
            "instanceConcurrency": {
              "type": "number",
              "description": "单实例多并发数。规定了单个实例可以同时同时被多个请求命中的上限，只对自定义运行时与自定义容器镜像运行时生效。范围为[1, 200]"
            },
            "environmentVariables": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "description": "环境变量值"
              },
              "description": "运行时的环境变量配置"
            },
            "internetAccess": {
              "type": "boolean",
              "description": "是否支持从函数实例内访问互联网"
            },
            "logConfig": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "project": {
                      "type": "string",
                      "description": "日志投递的SLS日志项目名称"
                    },
                    "logstore": {
                      "type": "string",
                      "description": "日志投递的SLS日志库名称"
                    },
                    "logBeginRule": {
                      "type": "string",
                      "enum": [
                        "DefaultRegex",
                        "None"
                      ],
                      "default": "DefaultRegex",
                      "description": "日志投递到SLS日志库时的切分规则，可选值为DefaultRegex，表示使用默认的切分规则。启用后，函数计算将按日志分割规则进行切分，切分成多个日志段，并逐条写入日志服务。默认的日志分割规则为 ^.{0,2}d{4}-d{2}-d{2}，即匹配符合xxxx-xx-xx格式的日期，其中x代表数字。该规则将按照行首是否带有日期进行切分，例如您的日志行首是2023-10-10，则该日志将被认为是一块日志的首行，首行和接下来连续不带日期的日志将被作为一条日志写入到日志服务。不启用日志分割规则是，默认使用换行符\\n进行切分。"
                    },
                    "enableInstanceMetrics": {
                      "type": "boolean",
                      "default": true,
                      "description": "是否开启实例级指标投递，开启后，函数计算会自动将实例级指标投递到SLS日志库。"
                    },
                    "enableRequestMetrics": {
                      "type": "boolean",
                      "default": true,
                      "description": "是否开启请求级指标投递，开启后，函数计算会自动将请求级指标投递到SLS日志库。"
                    }
                  },
                  "required": [
                    "project",
                    "logstore"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "enum": [
                    "auto"
                  ]
                }
              ],
              "description": "日志投递配置。如果配置为auto，则会自动创建SLS日志库并投递日志。如果配置为其他值，则需要配置project和logstore。"
            },
            "vpcConfig": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "vpcId": {
                      "type": "string",
                      "description": "VPC的ID"
                    },
                    "vSwitchIds": {
                      "type": "string",
                      "description": "VSwitch的ID"
                    },
                    "securityGroupId": {
                      "type": "string",
                      "description": "安全组ID"
                    }
                  },
                  "required": [
                    "vpcId",
                    "vSwitchIds",
                    "securityGroupId"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "enum": [
                    "auto"
                  ]
                }
              ],
              "description": "函数的VPC网络配置。如果配置为auto，则会自动创建VPC、VSwitch与安全组配置。如果配置为其他值，则需要配置vpcId、vSwitchIds与securityGroupId。函数实例会运行在配置的VPC网络中。"
            },
            "role": {
              "type": "string",
              "description": "函数运行时的角色配置。授予函数计算所需权限的 RAM 角色，使用场景包含：1. 把函数产生的日志发送到您的日志库中。2. 为函数在执行过程中访问其他云资源生成的临时访问令牌。一般可以设置为aliyunfcdefaultrole。角色ARN为acs:ram::****:role/aliyunfcdefaultrole,只需要输入aliyunfcdefaultrole即可"
            },
            "runtime": {
              "type": "string",
              "enum": [
                "custom.debian10",
                "custom.debian11",
                "custom.debian12"
              ],
              "description": "函数的运行时环境，对于自定义运行时，当前支持debian10，debian11，debian12"
            },
            "timeout": {
              "type": "number",
              "description": "函数执行的超时时间，单位为秒，最小 1 秒，默认 3 秒。函数执行超过这个时间后会被终止执行。"
            },
            "layers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "函数计算的层配置，当前会自动为custom.debian10，custom.debian11，custom.debian12添加默认的公共层"
            },
            "tag": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "标签名称"
                  },
                  "value": {
                    "type": "string",
                    "description": "标签值"
                  }
                },
                "required": [
                  "key",
                  "value"
                ],
                "additionalProperties": false
              },
              "description": "函数标签的key与value配置"
            }
          },
          "required": [
            "functionName"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "get-function",
        "description": "获取创建的函数计算的函数信息",
        "inputSchema": {
          "type": "object",
          "properties": {
            "functionName": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_][a-zA-Z0-9_-]{0,63}$",
              "description": "函数名称，函数名称在每个region必须是唯一的。"
            },
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            }
          },
          "required": [
            "functionName"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "list-functions",
        "description": "获取函数计算的函数列表，只返回函数名称与部分函数信息，不返回所有函数信息。如果需要获取所有函数信息，请使用get-function工具",
        "inputSchema": {
          "type": "object",
          "properties": {
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "prefix": {
              "type": "string",
              "description": "函数名称前缀，用于过滤函数列表"
            },
            "nextToken": {
              "type": "string",
              "description": "函数列表的下一页token，用于分页查询函数列表。第一页不需要提供"
            },
            "limit": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "description": "函数列表的返回数量上限，默认50，最大100",
              "default": 50
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "标签名称"
                  },
                  "value": {
                    "type": "string",
                    "description": "标签值"
                  }
                },
                "required": [
                  "key",
                  "value"
                ],
                "additionalProperties": false
              },
              "description": "函数标签，用于过滤函数列表，只返回包含所有标签的函数"
            },
            "runtime": {
              "type": "string",
              "description": "函数运行时，用于过滤函数列表，只返回指定运行时的函数"
            }
          },
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "delete-function",
        "description": "删除函数计算的函数",
        "inputSchema": {
          "type": "object",
          "properties": {
            "functionName": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_][a-zA-Z0-9_-]{0,63}$",
              "description": "函数名称，函数名称在每个region必须是唯一的。"
            },
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            }
          },
          "required": [
            "functionName"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "get-custom-domain-config",
        "description": "查询函数计算的域名路由配置",
        "inputSchema": {
          "type": "object",
          "properties": {
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "domain": {
              "type": "string",
              "description": "域名，例如example.com，域名不能带有'https://'或'http://'等协议内容"
            }
          },
          "required": [
            "domain"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "update-custom-domain-config",
        "description": "更新函数计算的域名路由配置，修改域名路由配置",
        "inputSchema": {
          "type": "object",
          "properties": {
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "domain": {
              "type": "string",
              "description": "域名，例如example.com，域名不能带有'https://'或'http://'等协议内容"
            },
            "updateCustomDomainConfig": {
              "type": "object",
              "properties": {
                "protocol": {
                  "type": "string",
                  "enum": [
                    "HTTP",
                    "HTTPS",
                    "HTTP,HTTPS"
                  ],
                  "description": "域名路由配置的协议，可选值为HTTP, HTTPS, HTTP,HTTPS。HTTP：仅支持 HTTP 协议。HTTPS：仅支持 HTTPS 协议。HTTP,HTTPS：支持 HTTP 及 HTTPS 协议。"
                },
                "routeConfig": {
                  "type": "object",
                  "properties": {
                    "routes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "HTTP协议中的PATH路径，例如/api/，或/api/*"
                          },
                          "functionName": {
                            "type": "string",
                            "description": "路由的目标函数名称"
                          },
                          "qualifier": {
                            "type": "string",
                            "description": "路由的目标函数版本或别名，默认是LATEST"
                          },
                          "methods": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "PUT",
                                "DELETE",
                                "HEAD",
                                "OPTIONS"
                              ]
                            },
                            "description": "HTTP方法，可选值为GET, POST, PUT, DELETE, HEAD, OPTIONS",
                            "default": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "HEAD",
                              "OPTIONS"
                            ]
                          },
                          "rewriteConfig": {
                            "type": "object",
                            "properties": {
                              "equalRules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "type": "string",
                                      "description": "匹配规则"
                                    },
                                    "replacement": {
                                      "type": "string",
                                      "description": "替换规则"
                                    }
                                  },
                                  "required": [
                                    "match",
                                    "replacement"
                                  ],
                                  "additionalProperties": false,
                                  "description": "自定义域名完全匹配重写规则配置"
                                },
                                "description": "精确匹配规则列表"
                              },
                              "wildcardRules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "type": "string",
                                      "description": "匹配规则"
                                    },
                                    "replacement": {
                                      "type": "string",
                                      "description": "替换规则"
                                    }
                                  },
                                  "required": [
                                    "match",
                                    "replacement"
                                  ],
                                  "additionalProperties": false,
                                  "description": "自定义域名通配符重写规则配置"
                                },
                                "description": "通配匹配规则列表"
                              },
                              "regexRules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "type": "string",
                                      "description": "匹配规则"
                                    },
                                    "replacement": {
                                      "type": "string",
                                      "description": "替换规则"
                                    }
                                  },
                                  "required": [
                                    "match",
                                    "replacement"
                                  ],
                                  "additionalProperties": false,
                                  "description": "自定义域名正则重写规则配置"
                                },
                                "description": "正则匹配规则列表"
                              }
                            },
                            "required": [
                              "equalRules",
                              "wildcardRules",
                              "regexRules"
                            ],
                            "additionalProperties": false,
                            "description": "重写配置，可以采用精确匹配、通配匹配或正则匹配其中之一"
                          }
                        },
                        "required": [
                          "path",
                          "functionName"
                        ],
                        "additionalProperties": false,
                        "description": "自定义域名路由路径配置。"
                      },
                      "description": "路由配置"
                    }
                  },
                  "required": [
                    "routes"
                  ],
                  "additionalProperties": false
                },
                "authConfig": {
                  "type": "object",
                  "properties": {
                    "authType": {
                      "type": "string",
                      "enum": [
                        "anonymous",
                        "function"
                      ],
                      "description": "认证类型，可选值为anonymous, function。anonymous：匿名认证，无需认证。function：函数签名校验认证。默认为匿名校验"
                    }
                  },
                  "additionalProperties": false,
                  "description": "权限认证配置"
                },
                "certConfig": {
                  "type": "object",
                  "properties": {
                    "certName": {
                      "type": "string",
                      "description": "证书名称"
                    },
                    "privateKey": {
                      "type": "string",
                      "description": "PEM格式证书私钥"
                    },
                    "certificate": {
                      "type": "string",
                      "description": "PEM格式证书内容，必须包含全部的证书内容，包括中间证书"
                    }
                  },
                  "required": [
                    "certName",
                    "privateKey",
                    "certificate"
                  ],
                  "additionalProperties": false,
                  "description": "证书配置，如果要支持HTTPS协议，则必须要配置证书"
                },
                "tlsConfig": {
                  "type": "object",
                  "properties": {
                    "minVersion": {
                      "type": "string",
                      "description": "TLS版本，可选值为TLSv1.0, TLSv1.1, TLSv1.2, TLSv1.3。默认为TLSv1.2"
                    },
                    "maxVersion": {
                      "type": "string",
                      "description": "TLS版本，可选值为TLSv1.0, TLSv1.1, TLSv1.2, TLSv1.3。默认为TLSv1.2"
                    },
                    "cipherSuites": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "TLS密码套件，可选值为TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256。默认为TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                    }
                  },
                  "required": [
                    "minVersion",
                    "maxVersion",
                    "cipherSuites"
                  ],
                  "additionalProperties": false,
                  "description": "TLS配置，如果要支持HTTPS协议，则必须要配置TLS"
                },
                "wafConfig": {
                  "type": "object",
                  "properties": {
                    "enable": {
                      "type": "boolean",
                      "description": "是否开启WAF"
                    }
                  },
                  "required": [
                    "enable"
                  ],
                  "additionalProperties": false,
                  "description": "Web应用防火墙（WAF）配置"
                }
              },
              "required": [
                "routeConfig",
                "authConfig"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "domain",
            "updateCustomDomainConfig"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "create-custom-domain-config",
        "description": "创建函数计算的域名路由配置，域名必须已经CNAME到函数计算的公网域名（格式为${uid}.${regionId}.fc.aliyuncs.com，例如14**49.cn-hangzhou.fc.aliyuncs.com）上，否则会创建失败。",
        "inputSchema": {
          "type": "object",
          "properties": {
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "createCustomDomainConfig": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "description": "域名，例如example.com，域名不能带有'https://'或'http://'等协议内容"
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "HTTP",
                    "HTTPS",
                    "HTTP,HTTPS"
                  ],
                  "description": "域名路由配置的协议，可选值为HTTP, HTTPS, HTTP,HTTPS。HTTP：仅支持 HTTP 协议。HTTPS：仅支持 HTTPS 协议。HTTP,HTTPS：支持 HTTP 及 HTTPS 协议。"
                },
                "routeConfig": {
                  "type": "object",
                  "properties": {
                    "routes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "HTTP协议中的PATH路径，例如/api/，或/api/*"
                          },
                          "functionName": {
                            "type": "string",
                            "description": "路由的目标函数名称"
                          },
                          "qualifier": {
                            "type": "string",
                            "description": "路由的目标函数版本或别名，默认是LATEST"
                          },
                          "methods": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "PUT",
                                "DELETE",
                                "HEAD",
                                "OPTIONS"
                              ]
                            },
                            "description": "HTTP方法，可选值为GET, POST, PUT, DELETE, HEAD, OPTIONS",
                            "default": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "HEAD",
                              "OPTIONS"
                            ]
                          },
                          "rewriteConfig": {
                            "type": "object",
                            "properties": {
                              "equalRules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "type": "string",
                                      "description": "匹配规则"
                                    },
                                    "replacement": {
                                      "type": "string",
                                      "description": "替换规则"
                                    }
                                  },
                                  "required": [
                                    "match",
                                    "replacement"
                                  ],
                                  "additionalProperties": false,
                                  "description": "自定义域名完全匹配重写规则配置"
                                },
                                "description": "精确匹配规则列表"
                              },
                              "wildcardRules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "type": "string",
                                      "description": "匹配规则"
                                    },
                                    "replacement": {
                                      "type": "string",
                                      "description": "替换规则"
                                    }
                                  },
                                  "required": [
                                    "match",
                                    "replacement"
                                  ],
                                  "additionalProperties": false,
                                  "description": "自定义域名通配符重写规则配置"
                                },
                                "description": "通配匹配规则列表"
                              },
                              "regexRules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "type": "string",
                                      "description": "匹配规则"
                                    },
                                    "replacement": {
                                      "type": "string",
                                      "description": "替换规则"
                                    }
                                  },
                                  "required": [
                                    "match",
                                    "replacement"
                                  ],
                                  "additionalProperties": false,
                                  "description": "自定义域名正则重写规则配置"
                                },
                                "description": "正则匹配规则列表"
                              }
                            },
                            "required": [
                              "equalRules",
                              "wildcardRules",
                              "regexRules"
                            ],
                            "additionalProperties": false,
                            "description": "重写配置，可以采用精确匹配、通配匹配或正则匹配其中之一"
                          }
                        },
                        "required": [
                          "path",
                          "functionName"
                        ],
                        "additionalProperties": false,
                        "description": "自定义域名路由路径配置。"
                      },
                      "description": "路由配置"
                    }
                  },
                  "required": [
                    "routes"
                  ],
                  "additionalProperties": false
                },
                "authConfig": {
                  "type": "object",
                  "properties": {
                    "authType": {
                      "type": "string",
                      "enum": [
                        "anonymous",
                        "function"
                      ],
                      "description": "认证类型，可选值为anonymous, function。anonymous：匿名认证，无需认证。function：函数签名校验认证。默认为匿名校验"
                    }
                  },
                  "additionalProperties": false,
                  "description": "权限认证配置"
                },
                "certConfig": {
                  "type": "object",
                  "properties": {
                    "certName": {
                      "type": "string",
                      "description": "证书名称"
                    },
                    "privateKey": {
                      "type": "string",
                      "description": "PEM格式证书私钥"
                    },
                    "certificate": {
                      "type": "string",
                      "description": "PEM格式证书内容，必须包含全部的证书内容，包括中间证书"
                    }
                  },
                  "required": [
                    "certName",
                    "privateKey",
                    "certificate"
                  ],
                  "additionalProperties": false,
                  "description": "证书配置，如果要支持HTTPS协议，则必须要配置证书"
                },
                "tlsConfig": {
                  "type": "object",
                  "properties": {
                    "minVersion": {
                      "type": "string",
                      "description": "TLS版本，可选值为TLSv1.0, TLSv1.1, TLSv1.2, TLSv1.3。默认为TLSv1.2"
                    },
                    "maxVersion": {
                      "type": "string",
                      "description": "TLS版本，可选值为TLSv1.0, TLSv1.1, TLSv1.2, TLSv1.3。默认为TLSv1.2"
                    },
                    "cipherSuites": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "TLS密码套件，可选值为TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256。默认为TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                    }
                  },
                  "required": [
                    "minVersion",
                    "maxVersion",
                    "cipherSuites"
                  ],
                  "additionalProperties": false,
                  "description": "TLS配置，如果要支持HTTPS协议，则必须要配置TLS"
                },
                "wafConfig": {
                  "type": "object",
                  "properties": {
                    "enable": {
                      "type": "boolean",
                      "description": "是否开启WAF"
                    }
                  },
                  "required": [
                    "enable"
                  ],
                  "additionalProperties": false,
                  "description": "Web应用防火墙（WAF）配置"
                }
              },
              "required": [
                "domain",
                "routeConfig",
                "authConfig"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "createCustomDomainConfig"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "delete-custom-domain-config",
        "description": "删除函数计算的域名路由配置，CNAME记录不会被删除，需要手动删除CNAME记录",
        "inputSchema": {
          "type": "object",
          "properties": {
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "domain": {
              "type": "string",
              "description": "域名，例如example.com，域名不能带有'https://'或'http://'等协议内容"
            }
          },
          "required": [
            "domain"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "publish-function-version",
        "description": "将函数的最新代码发布为新版本",
        "inputSchema": {
          "type": "object",
          "properties": {
            "functionName": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_][a-zA-Z0-9_-]{0,63}$",
              "description": "函数名称，函数名称在每个region必须是唯一的。"
            },
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "description": {
              "type": "string",
              "description": "函数版本的描述，可以描述一下发布的函数版本的功能。"
            }
          },
          "required": [
            "functionName",
            "description"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "list-function-versions",
        "description": "获取函数计算的函数版本列表",
        "inputSchema": {
          "type": "object",
          "properties": {
            "functionName": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_][a-zA-Z0-9_-]{0,63}$",
              "description": "函数名称，函数名称在每个region必须是唯一的。"
            },
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "nextToken": {
              "type": "string",
              "description": "函数版本列表的下一页token，用于分页查询函数版本列表。第一页不需要提供"
            },
            "direction": {
              "type": "string",
              "enum": [
                "BACKWARD",
                "FORWARD"
              ],
              "description": "函数版本列表的排序方向，BACKWARD表示按版本号降序，FORWARD表示按版本号升序",
              "default": "BACKWARD"
            },
            "limit": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "description": "函数版本列表的返回数量上限，默认50，最大100",
              "default": 50
            }
          },
          "required": [
            "functionName"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "delete-function-version",
        "description": "删除函数计算的函数版本",
        "inputSchema": {
          "type": "object",
          "properties": {
            "functionName": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_][a-zA-Z0-9_-]{0,63}$",
              "description": "函数名称，函数名称在每个region必须是唯一的。"
            },
            "region": {
              "type": "string",
              "enum": [
                "cn-hangzhou",
                "cn-shanghai",
                "cn-beijing",
                "cn-shenzhen",
                "cn-hongkong",
                "ap-southeast-1",
                "ap-southeast-2",
                "ap-southeast-3",
                "ap-southeast-5",
                "ap-northeast-1",
                "eu-central-1",
                "eu-west-1",
                "us-west-1",
                "us-east-1",
                "ap-south-1",
                "me-east-1",
                "cn-chengdu",
                "cn-wulanchabu",
                "cn-guangzhou"
              ],
              "default": "cn-hangzhou",
              "description": "部署的区域，当前可选的区域是cn-hangzhou, cn-shanghai, cn-beijing, cn-shenzhen, cn-hongkong, ap-southeast-1, ap-southeast-2, ap-southeast-3, ap-southeast-5, ap-northeast-1, eu-central-1, eu-west-1, us-west-1, us-east-1, ap-south-1, me-east-1, cn-chengdu, cn-wulanchabu, cn-guangzhou，默认是cn-hangzhou"
            },
            "versionId": {
              "type": "string",
              "description": "函数版本ID"
            }
          },
          "required": [
            "functionName",
            "versionId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    ]
  }