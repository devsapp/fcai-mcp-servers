{
	"tools": [{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			},
			"name": "browser_close",
			"description": "Close the page",
			"annotations": {
				"openWorldHint": true,
				"title": "Close browser",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"width": {
						"description": "Width of the browser window",
						"type": "number"
					},
					"height": {
						"description": "Height of the browser window",
						"type": "number"
					}
				},
				"required": [
					"width",
					"height"
				]
			},
			"name": "browser_resize",
			"description": "Resize the browser window",
			"annotations": {
				"openWorldHint": true,
				"title": "Resize browser window",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			},
			"name": "browser_console_messages",
			"description": "Returns all console messages",
			"annotations": {
				"openWorldHint": true,
				"title": "Get console messages",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"promptText": {
						"description": "The text of the prompt in case of a prompt dialog.",
						"type": "string"
					},
					"accept": {
						"description": "Whether to accept the dialog.",
						"type": "boolean"
					}
				},
				"required": [
					"accept"
				]
			},
			"name": "browser_handle_dialog",
			"description": "Handle a dialog",
			"annotations": {
				"openWorldHint": true,
				"title": "Handle a dialog",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"paths": {
						"description": "The absolute paths to the files to upload. Can be a single file or multiple files.",
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"paths"
				]
			},
			"name": "browser_file_upload",
			"description": "Upload one or multiple files",
			"annotations": {
				"openWorldHint": true,
				"title": "Upload files",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			},
			"name": "browser_install",
			"description": "Install the browser specified in the config. Call this if you get an error about the browser not being installed.",
			"annotations": {
				"openWorldHint": true,
				"title": "Install the browser specified in the config",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"key": {
						"description": "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`",
						"type": "string"
					}
				},
				"required": [
					"key"
				]
			},
			"name": "browser_press_key",
			"description": "Press a key on the keyboard",
			"annotations": {
				"openWorldHint": true,
				"title": "Press a key",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"url": {
						"description": "The URL to navigate to",
						"type": "string"
					}
				},
				"required": [
					"url"
				]
			},
			"name": "browser_navigate",
			"description": "Navigate to a URL",
			"annotations": {
				"openWorldHint": true,
				"title": "Navigate to a URL",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			},
			"name": "browser_navigate_back",
			"description": "Go back to the previous page",
			"annotations": {
				"openWorldHint": true,
				"title": "Go back",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			},
			"name": "browser_navigate_forward",
			"description": "Go forward to the next page",
			"annotations": {
				"openWorldHint": true,
				"title": "Go forward",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			},
			"name": "browser_network_requests",
			"description": "Returns all network requests since loading the page",
			"annotations": {
				"openWorldHint": true,
				"title": "List network requests",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"filename": {
						"description": "File name to save the pdf to. Defaults to `page-{timestamp}.pdf` if not specified.",
						"type": "string"
					}
				}
			},
			"name": "browser_pdf_save",
			"description": "Save page as PDF",
			"annotations": {
				"openWorldHint": true,
				"title": "Save as PDF",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"ref": {
						"description": "Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too.",
						"type": "string"
					},
					"filename": {
						"description": "File name to save the screenshot to. Defaults to `page-{timestamp}.{png|jpeg}` if not specified.",
						"type": "string"
					},
					"raw": {
						"description": "Whether to return without compression (in PNG format). Default is false, which returns a JPEG image.",
						"type": "boolean"
					},
					"element": {
						"description": "Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too.",
						"type": "string"
					}
				}
			},
			"name": "browser_take_screenshot",
			"description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
			"annotations": {
				"openWorldHint": true,
				"title": "Take a screenshot",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			},
			"name": "browser_snapshot",
			"description": "Capture accessibility snapshot of the current page, this is better than screenshot",
			"annotations": {
				"openWorldHint": true,
				"title": "Page snapshot",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"ref": {
						"description": "Exact target element reference from the page snapshot",
						"type": "string"
					},
					"element": {
						"description": "Human-readable element description used to obtain permission to interact with the element",
						"type": "string"
					}
				},
				"required": [
					"element",
					"ref"
				]
			},
			"name": "browser_click",
			"description": "Perform click on a web page",
			"annotations": {
				"openWorldHint": true,
				"title": "Click",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"endElement": {
						"description": "Human-readable target element description used to obtain the permission to interact with the element",
						"type": "string"
					},
					"startElement": {
						"description": "Human-readable source element description used to obtain the permission to interact with the element",
						"type": "string"
					},
					"startRef": {
						"description": "Exact source element reference from the page snapshot",
						"type": "string"
					},
					"endRef": {
						"description": "Exact target element reference from the page snapshot",
						"type": "string"
					}
				},
				"required": [
					"startElement",
					"startRef",
					"endElement",
					"endRef"
				]
			},
			"name": "browser_drag",
			"description": "Perform drag and drop between two elements",
			"annotations": {
				"openWorldHint": true,
				"title": "Drag mouse",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"ref": {
						"description": "Exact target element reference from the page snapshot",
						"type": "string"
					},
					"element": {
						"description": "Human-readable element description used to obtain permission to interact with the element",
						"type": "string"
					}
				},
				"required": [
					"element",
					"ref"
				]
			},
			"name": "browser_hover",
			"description": "Hover over element on page",
			"annotations": {
				"openWorldHint": true,
				"title": "Hover mouse",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"ref": {
						"description": "Exact target element reference from the page snapshot",
						"type": "string"
					},
					"submit": {
						"description": "Whether to submit entered text (press Enter after)",
						"type": "boolean"
					},
					"text": {
						"description": "Text to type into the element",
						"type": "string"
					},
					"slowly": {
						"description": "Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once.",
						"type": "boolean"
					},
					"element": {
						"description": "Human-readable element description used to obtain permission to interact with the element",
						"type": "string"
					}
				},
				"required": [
					"element",
					"ref",
					"text"
				]
			},
			"name": "browser_type",
			"description": "Type text into editable element",
			"annotations": {
				"openWorldHint": true,
				"title": "Type text",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"ref": {
						"description": "Exact target element reference from the page snapshot",
						"type": "string"
					},
					"values": {
						"description": "Array of values to select in the dropdown. This can be a single value or multiple values.",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"element": {
						"description": "Human-readable element description used to obtain permission to interact with the element",
						"type": "string"
					}
				},
				"required": [
					"element",
					"ref",
					"values"
				]
			},
			"name": "browser_select_option",
			"description": "Select an option in a dropdown",
			"annotations": {
				"openWorldHint": true,
				"title": "Select option",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			},
			"name": "browser_tab_list",
			"description": "List browser tabs",
			"annotations": {
				"openWorldHint": true,
				"title": "List tabs",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"url": {
						"description": "The URL to navigate to in the new tab. If not provided, the new tab will be blank.",
						"type": "string"
					}
				}
			},
			"name": "browser_tab_new",
			"description": "Open a new tab",
			"annotations": {
				"openWorldHint": true,
				"title": "Open a new tab",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"index": {
						"description": "The index of the tab to select",
						"type": "number"
					}
				},
				"required": [
					"index"
				]
			},
			"name": "browser_tab_select",
			"description": "Select a tab by index",
			"annotations": {
				"openWorldHint": true,
				"title": "Select a tab",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"index": {
						"description": "The index of the tab to close. Closes current tab if not provided.",
						"type": "number"
					}
				}
			},
			"name": "browser_tab_close",
			"description": "Close a tab",
			"annotations": {
				"openWorldHint": true,
				"title": "Close a tab",
				"destructiveHint": true,
				"readOnlyHint": false
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"name": {
						"description": "The name of the test",
						"type": "string"
					},
					"description": {
						"description": "The description of the test",
						"type": "string"
					},
					"steps": {
						"description": "The steps of the test",
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"name",
					"description",
					"steps"
				]
			},
			"name": "browser_generate_playwright_test",
			"description": "Generate a Playwright test for given scenario",
			"annotations": {
				"openWorldHint": true,
				"title": "Generate a Playwright test",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		},
		{
			"inputSchema": {
				"$schema": "http://json-schema.org/draft-07/schema#",
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"time": {
						"description": "The time to wait in seconds",
						"type": "number"
					},
					"text": {
						"description": "The text to wait for",
						"type": "string"
					},
					"textGone": {
						"description": "The text to wait for to disappear",
						"type": "string"
					}
				}
			},
			"name": "browser_wait_for",
			"description": "Wait for text to appear or disappear or a specified time to pass",
			"annotations": {
				"openWorldHint": true,
				"title": "Wait for",
				"destructiveHint": false,
				"readOnlyHint": true
			}
		}
	]
}